apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.db.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - image: "{{ .Values.db.image }}:{{ .Values.db.tag }}"
        name: {{ .Values.db.name }}
        ports:
        - containerPort: 3306
          name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: root-secret
                key: password
          # - name: MYSQL_USER
          #   valueFrom:
          #     secretKeyRef:
          #       name: db-user-secret
          #       key: username
          # - name: MYSQL_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: db-user-secret
          #       key: password
          # - name: MYSQL_DATABASE
          #   valueFrom:
          #     configMapKeyRef:
          #       name: db-conf
          #       key: name
        livenessProbe:
          tcpSocket:
            port: 3306
        ports:
        - containerPort: 3306
          name: {{ .Values.db.name }}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: {{ .Values.PersistentVolume.mysql.storageName }}
        persistentVolumeClaim:
          claimName: {{ .Values.PersistentVolume.mysql.pvcName }}
